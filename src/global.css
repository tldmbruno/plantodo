html {
	--color-primary: #2a7;
	--color-secondary: #46c;
	--color-error: #e25;
	--color-light: #eeefef;
	--color-middle: #aaaab044;
	--color-dark: #111318;

	--line-weight: 2px;
	--radius: 6px; /* 4px */

	--display-font: 'Fredoka One', sans-serif;
	--body-font: 'Rubik', sans-serif;

	--bg-trans: background-color .8s, color .4s;

	font-family: var(--body-font);
}

body {
	height: 100vh;
	margin: 0px;

	color: var(--color-dark);
	
	background-image: url('/plant-background.jpg');
	background-position: 50% 50%;
	background-attachment: fixed;
	background-size: cover;
	
  background-repeat: no-repeat;
	
	/* This makes the magic happen */
	background-color: #fff;
	background-blend-mode: difference;
	transition: var(--bg-trans);
	}
	/* Dark mode */
	.dark body {
		background-color: #000;
		color: var(--color-light);

		--color-primary: #774aca;
		--color-secondary: #282d6e;
	}

p {
	margin-bottom: 1rem;
	line-height: normal;
	font-size: clamp(.8em, 1vw, 2em);
}

h1, h2, h3, h4, h5, h6 {
	font-family: var(--display-font);
	margin-bottom: .4rem;
	user-select: none;
}

h1 {
	font-size: clamp(2em, 3vw, 2.4em);
}

h2 {
	font-size: clamp(1em, 2.4vw, 1.4em);
}

a,
	a:visited {
		color: inherit;
		text-decoration: none;
	}

	a:hover {
		color: var(--color-primary);
	}

	.primaryBg a:hover {
		color: var(--color-secondary);
	}

li {
	margin-bottom: .4rem;
}

label, .breakableWord {
	user-select: none;
	word-wrap: break-word;
	word-break: break-all;
}

.button, button {
	height: 2.5rem;
	padding: 0 1rem 0 1rem;

	white-space: nowrap;
	
	background-color: inherit;
	color: inherit;

	font-family: var(--body-font);
	font-weight: bold;

	border: var(--line-weight) solid var(--color-middle);
	border-radius: var(--radius);

	transition: border .2s, color .2s;
	
	user-select: none;
	cursor: pointer;
}

.button { /* Class to simulate button's appearance */
  display: inline-block;
	
	padding: .65rem 1rem;
	height: auto;

	font-size: 13px;

	text-align: center;
	text-anchor: middle;
}

.button:hover, button:hover {
	border: var(--line-weight) solid var(--color-primary);
	color: var(--color-primary)
	}

	.button:active, button:active {
		border: var(--line-weight) solid var(--color-secondary);
		background-color: var(--color-light);
		color: var(--color-secondary);
}

input {
	padding: 0px;
	min-width: 2.5rem;
	height: 2.5rem;
	margin: .1rem;
	
	background-color: var(--color-middle);
	color: var(--color-dark);
	border-radius: var(--radius);
	border: none;

	font-family: var(--body-font);
	}

	input[type='text'] {
		width: 100%;
		padding-left: 1rem;
	}

	.dark input[type='text'] {
		color: var(--color-light);
	}

	input[type='checkbox'] {
		width: 1.6rem;
		height: 1.6rem;
}

.list {
	padding: 0px;
	}

	.list li {
		display: flex;
		justify-content: space-between;
		align-items: center;
		flex-direction: row;
		box-sizing: border-box;

		position: relative;

		padding: .2rem;

		background-color: var(--color-middle);

		border: var(--line-weight) solid transparent;
		border-radius: var(--radius);

		cursor: pointer;

		animation: .2s running slide-in;
		transition: border .2s, background-color .2s;
		}

		.list li:hover {
			/* color: var(--color-primary); */
			border: var(--line-weight) solid var(--color-primary);
		}

	.list :is(a, label) {
		color: inherit;
		padding: .8rem;
		cursor: pointer;
	}

	.list div {
		display: flex;
		align-items: center;
		gap: .4rem;
	}

	.list button {
		margin: 0px;
		}

		.list button:active {
			background-color: var(--color-middle);
			color: var(--color-light);
		}

	.list input {
		box-shadow: none;
		cursor: pointer;
}

.list > .highlighted {
	color: var(--color-white);
	background-color: var(--color-secondary);
}

.container {
	padding: 3rem;
}

.simpleFlex {
	display: flex;
}

.sidebar {
	max-width: 300px;
	background-color: var(--color-light);

	transition: var(--bg-trans) ;
	}
	.dark .sidebar {
		background-color: var(--color-dark);
	}
	.sidebar label {
		font-style: var(--display-font);
		font-weight: 600;
		font-size: 1.2em;
		padding: .2rem 0rem;
		cursor: pointer;
	}
	.sidebar span {
		text-align: right;
		padding: .2rem 0rem;
	}
	.sidebar form {
		padding: .4rem;
	}
	.sidebar li {
		padding: 1rem;
		border-left: 0rem solid var(--color-primary);
		background-color: transparent;
		transition: border .4s ease-in-out, background-color .2s;
	}
	.sidebar li:hover {
		background-color: var(--color-middle);
		border-left: 1rem solid var(--color-primary);
	}
	.sidebar a {
		cursor: pointer;
	}
	.sidebar a:hover {
		color: inherit;
	}

.content {
	width: 100%;
	margin-left: auto;
	margin-right: auto;
}

.overflow {
	height: initial;
	box-sizing: border-box;
	overflow-y: auto;
	clip-path: fill-box;
}

.primaryBg {
	background-color: var(--color-primary);
	color: var(--color-light);
	}

	.primaryBg :is(button, .button):hover {
		border-color: var(--color-secondary);
	}

.secondaryBg {
	background-color: var(--color-secondary);
	color: var(--color-light);
}

.darkBg {
	background-color: var(--color-dark);
	color: var(--color-light);
}

.colorLight {
	color: var(--color-light)
}

.visibleOnParentHover {
	opacity: 0;
	transition: opacity .2s;
	}
	*:hover > .visibleOnParentHover {
		opacity: 100;
	}

/* --------------- */
/* Generic classes */
/* --------------- */

.flex {
	display: flex;
	align-items: center;
	justify-content: space-between;
}

.flexColumn {
	display: flex;
	align-items: center;
	justify-content: space-between;

	flex: column wrap;
}

.grid {
	display: flex;
	flex-wrap: wrap;
	}
	.grid > * {
		flex: 1 1 10rem;
	}

.gap {
	gap: .2rem;
}

.fullWidth {
	width: 100%;
}

.halfWidth {
	width: max(50%, 32rem);
}

.noMargin {
	margin: 0;
}

.title {
	margin-top: .6rem;
}

.danger:hover {
	border-color: var(--color-error);
	color: var(--color-error);
}

span .danger {
	color: var(--color-error);
}

.borderless {
	border-color: transparent;
}

.outsideLink::after {
	content:' üåê';
}

.centered {
	display: grid;
	text-align: center;
	align-items: center;
	justify-content: center;
}

.screenTall {
	height: calc(100vh - 3.6rem);
}

.halfScreenTall {
	min-height: 50vh;
}

.card {
	border: var(--line-weight) solid var(--color-middle);
	border-radius: var(--radius);
	padding: clamp(.2rem, 3vw, 1rem);

	background-color: var(--color-middle);
}

.giga {
	font-size: clamp(3em, 7vw, 4.6em);
}

.mini {
	font-size: clamp(.6em, 1vw, .8em);
}

.notTooWide {
	max-width: 1024px;
}

/* ---------- */
/* Animations */
/* ---------- */

@keyframes grow {
	0% {
		transform: scale(0);
	}
	100% {
		transform: scale(1);
	}
}

@keyframes fade-in {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 100;
	}
}

@keyframes slide-in {
	0% {
		opacity: 0;
		transform: translateX(-20%);
	}
	100% {
		opacity: 100;
		transform: translateX(0);
	}
}

/* ----------- */
/* Media Query */
/* ----------- */

@media screen and (min-width: 501px) {
	.mobile {
		display: none;
	}
}

@media screen and (max-width: 500px) {
	.optional {
		display: none;
	}
	.visibleOnParentHover {
		opacity: 100;
	}
}